# Azure profile configuration for PostgreSQL

# Azure PostgreSQL database configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://baleen-test-db.postgres.database.azure.com:5432/baleen?sslmode=require&sslfactory=org.postgresql.ssl.NonValidatingFactory}
spring.datasource.username=${DATABASE_USERNAME:baleendbadmin}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate properties
# Hibernate 6.x auto-detects the correct dialect - no need to specify explicitly
# If needed, use org.hibernate.dialect.PostgreSQLDialect (auto-detects PostGIS)
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
# Let Hibernate auto-detect the dialect based on the database connection
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.sql.init.mode=always
spring.sql.init.platform=azure
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

# Connection pool configuration
spring.datasource.hikari.maximum-pool-size=${DATABASE_POOL_SIZE:5}
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.pool-name=BaleenHikariPool

# Disable H2 console for production
spring.h2.console.enabled=false

# Logging
logging.level.root=INFO
logging.level.dk.dma.baleen=DEBUG
logging.level.org.springframework=INFO
logging.level.org.springframework.boot=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
logging.level.org.postgresql=DEBUG

# Server configuration
server.port=${SERVER_PORT:8080}
server.address=0.0.0.0

# Spring Boot startup
spring.main.banner-mode=console
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.open-in-view=false